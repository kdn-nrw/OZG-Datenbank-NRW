{#
This file is part of the KDN OZG package.
(c) Gert Hammes <info@gerthammes.de>
For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.
#}
{% extends '@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig' %}

{% block sonata_type_choice_field_mask_widget %}
    {{ block('choice_widget') }}
    {# Taking the form name excluding ending field glue character #}
    {% set main_form_name = id|slice(0, (id|length - name|length)-1) %}
    {% if expanded %}
        {% set js_selector = '#' ~ main_form_name ~ '_' ~ name ~ ' input' %}
        {% set js_event = 'ifChecked' %}
    {% else %}
        {% set js_selector = '#' ~ main_form_name ~ '_' ~ name %}
        {% set js_event = 'change' %}
    {% endif %}
    <script>
        jQuery(document).ready(function() {
            var allFields = {{ all_fields|json_encode|raw }},
                map = {{ map|json_encode|raw }},
                showMaskChoiceEl = jQuery("{{ js_selector }}");

            showMaskChoiceEl.on("{{ js_event }}", function () {
                choice_field_mask_show(jQuery(this).val());
            });

            function choice_field_mask_show(val) {
                var controlGroupIdFunc = function (field, formName) {
                    // Most of fields are named with an underscore
                    var defaultFieldId = '#sonata-ba-field-container-'+formName+'_' + field;

                    // Some fields may be named with a dash (like keys of immutable array form type)
                    if (jQuery(defaultFieldId).length === 0) {
                        return '#sonata-ba-field-container-'+formName+'-' + field;
                    }

                    return defaultFieldId;
                };
                var cfmHideField = function (field) {
                    var $fieldContainer = jQuery(controlGroupIdFunc(field, '{{ main_form_name }}'));
                    $fieldContainer.hide();
                    $fieldContainer.find('[required="required"]').attr('data-required', 'required').removeAttr("required");
                    var $box = $fieldContainer.parents('.box').first();
                    if ($box.length > 0 && $box.find('.form-group:visible').length === 0 && $box.find('> [data-widget="collapse"]').length === 0) {
                        $box.attr('data-cfm-hidden', 1).hide();
                    }
                };
                var cfmShowField = function (field) {
                    var $fieldContainer = jQuery(controlGroupIdFunc(field, '{{ main_form_name }}'));
                    $fieldContainer.show();
                    $fieldContainer.find('[data-required="required"]').attr("required", "required");
                    $fieldContainer.parents('[data-cfm-hidden="1"]').each(function(){
                        $(this).removeAttr('data-cfm-hidden').show();
                    });
                };
                if (val && (typeof val === 'object' || typeof val.isArray !== 'undefined' && val.isArray)) {
                    var showFields = [];
                    val.forEach(function(item){
                        if (map[item]) {
                            jQuery.each(map[item], function (i, field) {
                                if (!showFields.includes(field)) {
                                    showFields.push(field);
                                }
                            });
                        }
                    });
                    jQuery.each(allFields, function (i, field) {
                        if (showFields.includes(field)) {
                            cfmShowField(field);
                        } else {
                            cfmHideField(field);
                        }
                    });
                } else {
                    jQuery.each(allFields, function (i, field) {
                        cfmHideField(field);
                    });
                    if (map[val]) {
                        jQuery.each(map[val], function (i, field) {
                            cfmShowField(field);
                        });
                    }
                }
            }

            {% if value is empty %}
                choice_field_mask_show(showMaskChoiceEl.val());
            {% else %}
                {% if value is iterable %}
                    choice_field_mask_show({{ value|json_encode()|raw }});
                {% else %}
                    choice_field_mask_show('{{ value|e('js') }}');
                {% endif %}
            {% endif %}
        });

    </script>
{% endblock %}