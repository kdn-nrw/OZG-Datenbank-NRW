(self["webpackChunkkdn_ozg"] = self["webpackChunkkdn_ozg"] || []).push([["assets_js_modules_frontend_js"],{

/***/ "./assets/js/modules/frontend.js":
/*!***************************************!*\
  !*** ./assets/js/modules/frontend.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * This file is part of the KDN OZG package.
 *
 * @author    Gert Hammes <info@gerthammes.de>
 * @copyright 2021 Gert Hammes
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
(function (root, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
		__WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function () {
  "use strict";

  return {
    setUp: function () {
      let self = this;
      self.init();
    },
    init: function () {
      let self = this;
      document.querySelector('html').removeAttribute('style');
      document.querySelector('body').removeAttribute('style');
      document.addEventListener('click', function (evt) {
        let link;

        if (evt.target.matches('.js-search-toggle')) {
          link = evt.target;
        } else {
          link = evt.target.closest('.js-search-toggle');
        }

        if (link) {
          evt.preventDefault();
          evt.stopPropagation();
          var target = document.getElementById("suchleiste");

          if (target.style.display === "none") {
            target.style.display = "block";
          } else {
            target.style.display = "none";
          }
        }
      }, false); //

      let inputElements = document.querySelectorAll('.js-input-form-submit');

      for (let i = 0, n = inputElements.length; i < n; i++) {
        inputElements[i].addEventListener("keydown", function (event) {
          if (event.keyCode === 13) {
            document.getElementById(inputElements[i].dataset.target).submit();
            return false;
          }
        });
      }
    }
  };
});

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNzZXRzX2pzX21vZHVsZXNfZnJvbnRlbmRfanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQyxXQUFVQSxJQUFWLEVBQWdCQyxPQUFoQixFQUF5QjtFQUN0QixJQUFJLElBQUosRUFBZ0Q7SUFDNUNDLG9DQUFPRCxPQUFEO0FBQUE7QUFBQTtBQUFBO0FBQUEsa0dBQU47RUFDSCxDQUZELE1BRU8sRUFTTjtBQUNKLENBYkEsRUFhQyxJQWJELEVBYU8sWUFBWTtFQUNoQjs7RUFDQSxPQUFPO0lBQ0hNLEtBQUssRUFBRSxZQUFZO01BQ2YsSUFBSUMsSUFBSSxHQUFHLElBQVg7TUFDQUEsSUFBSSxDQUFDQyxJQUFMO0lBQ0gsQ0FKRTtJQUtIQSxJQUFJLEVBQUUsWUFBWTtNQUNkLElBQUlELElBQUksR0FBRyxJQUFYO01BQ0FFLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixNQUF2QixFQUErQkMsZUFBL0IsQ0FBK0MsT0FBL0M7TUFDQUYsUUFBUSxDQUFDQyxhQUFULENBQXVCLE1BQXZCLEVBQStCQyxlQUEvQixDQUErQyxPQUEvQztNQUNBRixRQUFRLENBQUNHLGdCQUFULENBQTBCLE9BQTFCLEVBQW1DLFVBQVVDLEdBQVYsRUFBZTtRQUM5QyxJQUFJQyxJQUFKOztRQUNBLElBQUlELEdBQUcsQ0FBQ0UsTUFBSixDQUFXQyxPQUFYLENBQW1CLG1CQUFuQixDQUFKLEVBQTZDO1VBQ3pDRixJQUFJLEdBQUdELEdBQUcsQ0FBQ0UsTUFBWDtRQUNILENBRkQsTUFFTztVQUNIRCxJQUFJLEdBQUdELEdBQUcsQ0FBQ0UsTUFBSixDQUFXRSxPQUFYLENBQW1CLG1CQUFuQixDQUFQO1FBQ0g7O1FBQ0QsSUFBSUgsSUFBSixFQUFVO1VBQ05ELEdBQUcsQ0FBQ0ssY0FBSjtVQUNBTCxHQUFHLENBQUNNLGVBQUo7VUFDQSxJQUFJSixNQUFNLEdBQUdOLFFBQVEsQ0FBQ1csY0FBVCxDQUF3QixZQUF4QixDQUFiOztVQUNBLElBQUlMLE1BQU0sQ0FBQ00sS0FBUCxDQUFhQyxPQUFiLEtBQXlCLE1BQTdCLEVBQXFDO1lBQ2pDUCxNQUFNLENBQUNNLEtBQVAsQ0FBYUMsT0FBYixHQUF1QixPQUF2QjtVQUNILENBRkQsTUFFTztZQUNIUCxNQUFNLENBQUNNLEtBQVAsQ0FBYUMsT0FBYixHQUF1QixNQUF2QjtVQUNIO1FBQ0o7TUFDSixDQWpCRCxFQWlCRyxLQWpCSCxFQUpjLENBc0JkOztNQUNBLElBQUlDLGFBQWEsR0FBR2QsUUFBUSxDQUFDZSxnQkFBVCxDQUEwQix1QkFBMUIsQ0FBcEI7O01BQ0EsS0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBUixFQUFXQyxDQUFDLEdBQUdILGFBQWEsQ0FBQ0ksTUFBbEMsRUFBMENGLENBQUMsR0FBR0MsQ0FBOUMsRUFBaURELENBQUMsRUFBbEQsRUFBc0Q7UUFDbERGLGFBQWEsQ0FBQ0UsQ0FBRCxDQUFiLENBQWlCYixnQkFBakIsQ0FBa0MsU0FBbEMsRUFBNkMsVUFBU2dCLEtBQVQsRUFBZ0I7VUFDekQsSUFBSUEsS0FBSyxDQUFDQyxPQUFOLEtBQWtCLEVBQXRCLEVBQTBCO1lBQ3RCcEIsUUFBUSxDQUFDVyxjQUFULENBQXdCRyxhQUFhLENBQUNFLENBQUQsQ0FBYixDQUFpQkssT0FBakIsQ0FBeUJmLE1BQWpELEVBQXlEZ0IsTUFBekQ7WUFDQSxPQUFPLEtBQVA7VUFDSDtRQUNKLENBTEQ7TUFNSDtJQUNKO0VBckNFLENBQVA7QUF1Q0gsQ0F0REEsQ0FBRCIsInNvdXJjZXMiOlsid2VicGFjazovL2tkbl9vemcvLi9hc3NldHMvanMvbW9kdWxlcy9mcm9udGVuZC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIHRoZSBLRE4gT1pHIHBhY2thZ2UuXG4gKlxuICogQGF1dGhvciAgICBHZXJ0IEhhbW1lcyA8aW5mb0BnZXJ0aGFtbWVzLmRlPlxuICogQGNvcHlyaWdodCAyMDIxIEdlcnQgSGFtbWVzXG4gKlxuICogRm9yIHRoZSBmdWxsIGNvcHlyaWdodCBhbmQgbGljZW5zZSBpbmZvcm1hdGlvbiwgcGxlYXNlIHZpZXcgdGhlIExJQ0VOU0VcbiAqIGZpbGUgdGhhdCB3YXMgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHNvdXJjZSBjb2RlLlxuICovXG4oZnVuY3Rpb24gKHJvb3QsIGZhY3RvcnkpIHtcbiAgICBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7XG4gICAgICAgIGRlZmluZShmYWN0b3J5KTtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnICYmIG1vZHVsZS5leHBvcnRzKSB7XG4gICAgICAgIC8vIE5vZGUuIERvZXMgbm90IHdvcmsgd2l0aCBzdHJpY3QgQ29tbW9uSlMsIGJ1dFxuICAgICAgICAvLyBvbmx5IENvbW1vbkpTLWxpa2UgZW52aXJvbm1lbnRzIHRoYXQgc3VwcG9ydCBtb2R1bGUuZXhwb3J0cyxcbiAgICAgICAgLy8gbGlrZSBOb2RlLlxuICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICAvLyBCcm93c2VyIGdsb2JhbHMgKHJvb3QgaXMgd2luZG93KVxuICAgICAgICAvLyBub2luc3BlY3Rpb24gSlNVbmRlZmluZWRQcm9wZXJ0eUFzc2lnbm1lbnRcbiAgICAgICAgcm9vdC5hcHBGcm9udGVuZCA9IGZhY3RvcnkoKTtcbiAgICB9XG59KHRoaXMsIGZ1bmN0aW9uICgpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICByZXR1cm4ge1xuICAgICAgICBzZXRVcDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xuICAgICAgICAgICAgc2VsZi5pbml0KCk7XG4gICAgICAgIH0sXG4gICAgICAgIGluaXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGxldCBzZWxmID0gdGhpcztcbiAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2h0bWwnKS5yZW1vdmVBdHRyaWJ1dGUoJ3N0eWxlJyk7XG4gICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdib2R5JykucmVtb3ZlQXR0cmlidXRlKCdzdHlsZScpO1xuICAgICAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZXZ0KSB7XG4gICAgICAgICAgICAgICAgbGV0IGxpbms7XG4gICAgICAgICAgICAgICAgaWYgKGV2dC50YXJnZXQubWF0Y2hlcygnLmpzLXNlYXJjaC10b2dnbGUnKSkge1xuICAgICAgICAgICAgICAgICAgICBsaW5rID0gZXZ0LnRhcmdldDtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBsaW5rID0gZXZ0LnRhcmdldC5jbG9zZXN0KCcuanMtc2VhcmNoLXRvZ2dsZScpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChsaW5rKSB7XG4gICAgICAgICAgICAgICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICAgICBldnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgICAgIHZhciB0YXJnZXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInN1Y2hsZWlzdGVcIik7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0YXJnZXQuc3R5bGUuZGlzcGxheSA9PT0gXCJub25lXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldC5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0LnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sIGZhbHNlKTtcbiAgICAgICAgICAgIC8vXG4gICAgICAgICAgICBsZXQgaW5wdXRFbGVtZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5qcy1pbnB1dC1mb3JtLXN1Ym1pdCcpO1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDAsIG4gPSBpbnB1dEVsZW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgICAgIGlucHV0RWxlbWVudHNbaV0uYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGV2ZW50LmtleUNvZGUgPT09IDEzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpbnB1dEVsZW1lbnRzW2ldLmRhdGFzZXQudGFyZ2V0KS5zdWJtaXQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcbn0pKTtcbiJdLCJuYW1lcyI6WyJyb290IiwiZmFjdG9yeSIsImRlZmluZSIsImFtZCIsIm1vZHVsZSIsImV4cG9ydHMiLCJhcHBGcm9udGVuZCIsInNldFVwIiwic2VsZiIsImluaXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJyZW1vdmVBdHRyaWJ1dGUiLCJhZGRFdmVudExpc3RlbmVyIiwiZXZ0IiwibGluayIsInRhcmdldCIsIm1hdGNoZXMiLCJjbG9zZXN0IiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJnZXRFbGVtZW50QnlJZCIsInN0eWxlIiwiZGlzcGxheSIsImlucHV0RWxlbWVudHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiaSIsIm4iLCJsZW5ndGgiLCJldmVudCIsImtleUNvZGUiLCJkYXRhc2V0Iiwic3VibWl0Il0sInNvdXJjZVJvb3QiOiIifQ==