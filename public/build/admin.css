body{background-color:#d3d3d3}@-webkit-keyframes full-rotate{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}@keyframes full-rotate{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}body.login-page{background-image:url(/build/images/login-background.a9acdc44.jpg);background-size:cover}body.login-page .login-box{background-color:#fff}body.login-page .login-logo,body.login-page .register-logo{padding-top:25px}body.login-page .login-logo img,body.login-page .register-logo img{height:auto;width:128px}@-webkit-keyframes chartjs-render-animation{0%{opacity:.99}to{opacity:1}}@keyframes chartjs-render-animation{0%{opacity:.99}to{opacity:1}}.chartjs-render-monitor{-webkit-animation:chartjs-render-animation 1ms;animation:chartjs-render-animation 1ms}.chartjs-size-monitor,.chartjs-size-monitor-expand,.chartjs-size-monitor-shrink{bottom:0;direction:ltr;left:0;overflow:hidden;pointer-events:none;position:absolute;right:0;top:0;visibility:hidden;z-index:-1}.chartjs-size-monitor-expand>div{height:1000000px;left:0;position:absolute;top:0;width:1000000px}.chartjs-size-monitor-shrink>div{height:200%;left:0;position:absolute;top:0;width:200%}.chart-loader{align-items:center;display:flex;justify-content:center;min-height:150px}.app-fe .page-title{padding:15px}.app-fe .page-title+li:before{display:none}.app-fe .content-bottom .mb-chart-container{max-width:600px}.main-header .navbar-nav>.user-menu>.dropdown-menu>.user-footer .btn-default,.main-header .navbar-nav>.user-menu>.dropdown-menu>.user-footer .btn-default:focus,.main-header .navbar-nav>.user-menu>.dropdown-menu>.user-footer .btn-default:hover{color:#fff}.main-header .navbar-custom-menu .user-footer a.btn{background:#215566;color:#fff;transition:background-color .2s linear}.main-header .navbar-custom-menu .user-footer a.btn:focus,.main-header .navbar-custom-menu .user-footer a.btn:hover{background:#286090;color:#fff}.hide-empty-block{display:none}@media (min-width:992px){.clear-left-md{clear:left}}.item-sub-list{padding-left:15px}.item-list .label{display:inline-block}.sidebar-menu>li{white-space:normal}.sidebar-menu>li>a{align-items:center;display:flex}.sidebar-menu>li>a>i{flex:0 0 24px}.sidebar-menu .treeview-menu>li>a{align-items:center;display:flex}.sidebar-menu .treeview-menu>li>a>i{flex:0 0 20px}.sonata-ba-view .child-table-container{border-bottom-width:2px;border-left-width:30px;font-size:1.2rem;padding:0}.sonata-ba-view .child-table-container .headline{font-size:1.25rem;font-weight:700;padding-left:8px}.sonata-ba-view .child-table-container .table{margin-bottom:0}.sonata-ba-view .child-table-container .child-item-list{display:flex;flex-wrap:wrap}.th-popover .field-help{margin-left:12px}.box-collection-static>.sonata-ba-collapsed-fields>.form-group>.control-label{display:none}.box-collection-static .show-as-headline{-webkit-appearance:none;-moz-appearance:none;background:transparent;border-width:0;color:#000;font-size:2rem;font-weight:700;padding:0;text-indent:1px;text-overflow:""}.box-collection-static .fim-status+.control-label__text{background-color:#fff;border-radius:3px;display:inline-block;padding:3px 6px}.box-collection-static .fim-status.fim-status-1+.control-label__text{background-color:#fd7e14}.box-collection-static .fim-status.fim-status-2+.control-label__text{background-color:#ffc107}.box-collection-static .fim-status.fim-status-3+.control-label__text{background-color:#28a745}.box-collection-static .fim-status.fim-status-4+.control-label__text{background-color:#e1eaee}.box-collection-static .sonata-collection-row:not(:last-child){border-bottom:2px solid #e1eaee;margin-bottom:20px;padding-bottom:20px}@media (min-width:992px){.box-collection-static.two-col:after{clear:both;content:"";display:block}.box-collection-static.two-col .sonata-collection-row{border:2px solid #e1eaee;float:left;margin-bottom:20px;padding:15px;width:calc(50% - 10px)}.box-collection-static.two-col .sonata-collection-row:nth-child(odd){clear:left}.box-collection-static.two-col .sonata-collection-row:nth-child(2n+2){margin-left:20px}}.collection-item-delete{border-bottom-width:0;border-top-left-radius:0;border-top-right-radius:0;margin:0 -10px -10px;padding:5px 10px}.collection-item-delete .checkbox{margin:0}.collection-item-delete:last-child .form-group{margin-bottom:0}.form-textarea{min-height:160px}.box-clipboard-rows .sonata-collection-row{position:relative}.box-clipboard-rows .block-copy-paste{position:absolute;right:15px;top:4px}.box-clipboard-rows .block-copy-paste .fa{color:#666;cursor:pointer;display:inline-block;opacity:.8;transition:all .2s ease-in-out}.box-clipboard-rows .block-copy-paste .fa:not(:last-child){margin-right:8px}.box-clipboard-rows .block-copy-paste .fa:focus,.box-clipboard-rows .block-copy-paste .fa:hover{color:#215566}.box-clipboard-rows .block-copy-paste .fa.active{color:#215566;opacity:1}.box-clipboard-rows .block-copy-paste .fa.disabled{color:#999;cursor:default;opacity:.5}.box-clipboard-rows .block-copy-paste .fa.disabled:focus,.box-clipboard-rows .block-copy-paste .fa.disabled:hover{color:#999}.box-collection-table .sonata-collection-row{margin-bottom:10px}@media (min-width:1200px){.box-collection-table .sonata-collection-row{border-bottom:1px solid #ccc;margin-bottom:0}.box-collection-table .sonata-collection-row:first-child{border-top:1px solid #ccc}.box-collection-table .sonata-collection-row:not(:first-child) .control-label{display:none}.box-collection-table .sonata-collection-row .form-group{margin-bottom:0}.box-collection-table .sonata-collection-row>.form-group>.sonata-ba-field>div{display:flex}.box-collection-table .sonata-collection-row>.form-group>.sonata-ba-field>div .form-group{border-left:1px solid #ccc;flex:0 0 25%;max-width:25%;padding:4px}.box-collection-table .sonata-collection-row>.form-group>.sonata-ba-field>div .form-group.ct-col-50{flex:0 0 50%;max-width:50%}.box-collection-table .sonata-collection-row>.form-group>.sonata-ba-field>div .form-group.ct-col-75{flex:0 0 75%;max-width:75%}.box-collection-table .sonata-collection-row>.form-group>.sonata-ba-field>div .form-group:last-child{border-right:1px solid #ccc}.box-collection-epayment-projects .sonata-collection-row{max-width:1200px}.box-collection-epayment-projects .sonata-collection-row:nth-child(2n+3){border-top:1px solid #ccc;margin-top:10px}.box-collection-epayment-projects .sonata-collection-row>.form-group>.sonata-ba-field>div .form-group{flex:0 0 35%;max-width:35%}.box-collection-epayment-projects .sonata-collection-row>.form-group>.sonata-ba-field>div .form-group:first-child,.box-collection-epayment-projects .sonata-collection-row>.form-group>.sonata-ba-field>div .form-group:nth-child(2){flex:0 0 15%;max-width:15%}.box-collection-epayment-projects .sonata-collection-row>.form-group>.sonata-ba-field>div .form-group:first-child .control-label,.box-collection-epayment-projects .sonata-collection-row>.form-group>.sonata-ba-field>div .form-group:nth-child(2) .control-label{opacity:0}}.sonata-ba-form-actions+.sonata-ba-form-spacer{display:none}.sonata-ba-form-actions.stuck+.sonata-ba-form-spacer{display:block;height:75px}@media (min-width:400px){.select2-drop{max-width:400px}}@media (min-width:800px){.select2-drop{max-width:600px}}.app-form-info.above{margin-bottom:20px}.app-form-info.above .info-box{position:relative}.app-form-info.above .info-box .info-box-content{margin-left:0}.app-form-info.above .info-box .info-box-icon{align-items:center;display:none;float:none;height:100%;justify-content:center;position:absolute}@media (min-width:400px){.app-form-info.above .info-box .info-box-icon{display:flex}.app-form-info.above .info-box .info-box-content{margin-left:90px}}.form-group-number .form-control{max-width:200px}.form-group-help-above>.sonata-ba-field{display:flex;flex-direction:column}.form-group-help-above>.sonata-ba-field>div{order:1}.form-group-help-above>.sonata-ba-field>.help-block{order:0}.box.box-primary{border-color:#215566}.box .nav-tabs-app-custom .nav-tabs{padding-left:15px}.box .nav-tabs-app-custom .tab-content{padding:10px 15px}.box [data-widget=collapse]{cursor:pointer}.box [data-widget=collapse] .fa{font-size:12px}.field-value-row{margin-bottom:10px;margin-top:10px}.field-value-row:first-child{margin-top:0}.field-value-row:last-child{margin-bottom:0}@media (min-width:992px){.text-md-right{text-align:right}}@media (min-width:1200px){.text-lg-left{text-align:left}.text-lg-right{text-align:right}}.has-popover .field-help{display:inline-block}.has-popover .popover{max-width:100%;width:450px}.field-help{color:#17a2b8;cursor:pointer;transition:color .2s linear}.field-help:focus,.field-help:hover{color:#215566}.dl-vertical dt{display:block;padding-bottom:4px}.dl-vertical dd{display:block}.dl-vertical dd:not(:last-child){margin-bottom:15px}.search-result-container{border-top:2px solid #e1eaee;margin-top:30px;padding-top:2px}.search-result-container .item-count{background:#28a745;color:#fff;display:block;flex:0 0 24px;font-weight:700;height:24px;line-height:24px;margin-right:10px;text-align:center;width:24px}.search-result-container .result-nav-link{align-items:center;border-left-width:0;display:flex;padding:6px 10px}.search-result-list{border-top:1px solid #e1eaee;list-style:none;margin:20px 0;padding:0}.search-result-item{background:#fff;border-bottom:1px solid #e1eaee;padding-top:10px}.search-result-item .item-header{align-items:center;display:flex;padding-left:10px}.search-result-item .item-title{font-weight:600}.search-result-item .item-content{padding-bottom:15px;padding-left:44px}.search-result-item .toggle-link-text{display:block}.search-result-item p:last-child{margin-bottom:0}.search-result-item .item-collapse-wrap{display:flex;flex-direction:column}.search-result-item .item-collapse-wrap .toggle-link-text{order:10}.search-result-item .item-collapse-wrap .toggle-link-text[aria-expanded=true],.search-result-item .item-collapse-wrap .toggle-link-text[aria-expanded=true]+.item-teaser{display:none}.search-result-item .collapse.in{display:block}.search-result-item .dl-horizontal dt{width:200px}.search-result-item .dl-horizontal dd{margin-left:220px}.search-result-item .item-sub-result{background:#e1eaee;border-radius:5px;margin-bottom:15px;padding:10px}.search-result-item .item-sub-result-list{border-top:1px dashed #e1eaee;display:flex;flex-wrap:wrap;margin:15px -10px 0;padding-top:15px}.search-result-item .item-sub-result-list .col{flex:1 1 auto;margin-bottom:20px;padding:0 10px}.search-result-item .unmapped-values{border-top:1px dashed #e1eaee;display:flex;flex-wrap:wrap;margin:15px 0 5px;padding-top:10px}.search-result-item .unmapped-values .label{align-items:center;display:flex;font-size:12px;margin-bottom:10px;margin-right:10px}.search-result-item .unmapped-values .label-text{padding-right:4px}.search-result-item .unmapped-values .label-popover{color:#215566;cursor:pointer}.project-status-info{display:flex;flex-direction:column;margin:0 0 -15px;padding-left:20px;position:relative;z-index:0}.project-status-info .arrow{flex:0 0 auto;height:100%;position:relative;width:40px;z-index:10}.project-status-info .arrow:after,.project-status-info .arrow:before{border-color:transparent #e1eaee transparent transparent;border-style:solid;border-width:0 40px 40px 0;content:"";display:block;height:0;left:0;position:absolute;top:0;width:0}.project-status-info .arrow:after{border-color:transparent transparent #e1eaee;border-width:0 0 40px 40px;bottom:0;top:auto}.project-status-info .arrow.right{z-index:9}.project-status-info .arrow.right:before{border-color:transparent transparent transparent #e1eaee;border-width:40px 0 0 40px}.project-status-info .arrow.right:after{border-color:#e1eaee transparent transparent;border-width:40px 40px 0 0}.project-status-info .name{align-items:center;background:#e1eaee;display:flex;font-size:20px;height:100%;line-height:20px;min-width:120px;padding:10px 0 10px 20px}.project-status-info .project-status-name{display:flex;flex-direction:row;flex-wrap:nowrap;height:80px}.project-status-info .project-status{margin-bottom:20px;margin-left:-20px}.project-status-info .project-status.active .name{background-color:#28a745;color:#fff}.project-status-info .project-status.active .arrow:before{border-color:transparent #28a745 transparent transparent}.project-status-info .project-status.active .arrow:after{border-color:transparent transparent #28a745}.project-status-info .project-status.active .arrow.right:before{border-color:transparent transparent transparent #28a745}.project-status-info .project-status.active .arrow.right:after{border-color:#28a745 transparent transparent}.project-status-info .project-status.current .name{background-color:#28a745}.project-status-info .project-status.current .arrow:after,.project-status-info .project-status.current .arrow:before{border-color:transparent #28a745 transparent transparent}.project-status-info .project-status.current .arrow:after{border-color:transparent transparent #28a745}.project-status-info .project-status.inactive .name{background-color:#fbc02d;padding-left:10px}.project-status-info .project-status.inactive .arrow.left{display:none}.project-status-info .project-status.inactive .arrow:after,.project-status-info .project-status.inactive .arrow:before{border-color:transparent #fbc02d transparent transparent}.project-status-info .project-status.inactive .arrow:after{border-color:transparent transparent #fbc02d}.project-status-info .project-status.inactive .arrow.right:before{border-color:transparent transparent transparent #fbc02d}.project-status-info .project-status.inactive .arrow.right:after{border-color:#fbc02d transparent transparent}.project-status-info .project-status-date{padding:6px 40px 0 60px}@media (min-width:576px){.project-status-info{flex-direction:row;flex-wrap:wrap}.project-status-info .project-status{margin-top:0}.project-status-info .project-status:not(:first-child){margin-left:-20px}}.list-status-reached{background-color:#aed581}.project-service-status-list{margin:10px -10px 0}.project-service-status-list .box-inline-headline{background:#efefef;border-top:1px solid #215566;margin:0;padding:5px 10px}.project-service-status-info{border-top:1px solid #90a4ae;padding:5px 10px 0}.project-service-status-info:not(:last-child){margin-bottom:10px}.project-service-status-info .arrow{width:20px}.project-service-status-info .arrow:after,.project-service-status-info .arrow:before{border-width:0 20px 20px 0}.project-service-status-info .arrow:after{border-width:0 0 20px 20px}.project-service-status-info .arrow.right{z-index:9}.project-service-status-info .arrow.right:before{border-width:20px 0 0 20px}.project-service-status-info .arrow.right:after{border-width:20px 20px 0 0}.project-service-status-info .name{font-size:16px;min-width:120px}.project-service-status-info .project-status-name{height:40px}.project-service-status-info .status-type-label{font-weight:700;padding-bottom:4px}@media (min-width:576px){.project-service-status-info .project-status:not(:first-child){margin-left:-10px}}.widget-headline{font-size:1.5rem}.widget-headline:first-child{margin-top:0}.widget-headline.wh-bold{font-weight:700}.box-widget .box-footer .description-block{align-items:center;display:flex;max-width:400px}.box-widget .box-footer .description-header{min-width:33%}.box-widget .box-footer .description-text{flex:1 1 auto;text-align:left;text-transform:none}.widget-user .widget-user-header{display:block;height:auto;min-height:120px;padding-left:120px}.widget-user .widget-user-image{left:10px;margin-left:0;top:10px}.widget-user .box-img-circle{border:2px solid #fff;border-radius:50%;height:100px;overflow:hidden;position:relative;width:100px}.widget-user .box-img-circle img{height:auto;width:100%}.widget-user .has-collapse{cursor:pointer;padding-left:120px;transition:all .2s linear}.widget-user .has-collapse .widget-user-image{transition:top .2s linear}.widget-user .has-collapse .box-img-circle{transition:all .2s linear}.widget-user .has-collapse.collapsed{height:70px;padding-bottom:10px;padding-left:70px;padding-top:10px}.widget-user .has-collapse.collapsed .box-img-circle{height:50px;width:50px}.widget-user .box-footer{padding-top:10px}.app-container-filter{display:flex;flex-direction:column}.app-container-filter .app-filter-selection{list-style:none;margin-bottom:15px;padding:0 15px}.app-container-filter .sonata-filters-box{float:none}@media (min-width:1200px){.app-container-filter{flex-direction:row;margin:0 0 20px;padding-bottom:15px;position:relative}.app-container-filter .app-filter-selection{background:#fff;border-radius:3px;border-top:3px solid #215566;box-shadow:0 1px 1px rgba(0,0,0,.1);flex:0 0 auto;margin:0 5px 0 0;padding:10px}.app-container-filter .box{margin-bottom:0}.app-container-filter .sonata-filters-box{padding:0}.app-container-filter .sonata-filter-form{flex:1 1 auto;padding:0}.app-container-filter .sonata-filter-form>.row{display:flex;flex-direction:row;margin:0}.app-container-filter .sonata-filter-form>.row>.col-lg-9{flex:1 1 auto;float:none;width:auto}.app-container-filter .sonata-filter-form>.row>.col-lg-3{background:#e1eaee;flex:0 1 auto;float:none;margin:-10px -10px -10px auto;padding:10px 30px;width:auto}.app-container-filter .sonata-filter-form>.row>.col-lg-3 .form-group:last-child{margin:0}.app-container-filter .sonata-filter-form .advanced-filter[style*="display: none;"]+.col-sm-4{max-width:66.6666666%;width:66.6666666%}}.inquiry-list-body{border-top:1px solid #f4f4f4}.box-comments .box-comment{padding:8px 10px}.box-comments .box-comment:first-of-type{padding-top:8px}.box-inquiry-parent{margin-bottom:10px}@media (min-width:1200px){.box-inquiry .box-comment{position:relative}.box-inquiry .link-answer{bottom:8px;display:flex;flex-wrap:nowrap;position:absolute;right:8px}.box-inquiry .message-content{max-width:800px}}.box-answers{background:#fcfcfc;border-left:15px solid #fff}@media (min-width:1200px){.box-answers{border-left-width:25px}}.box-comments>.box-inquiry>.box-comment{border-left:4px solid #215566}.box-comments>.box-inquiry:not(:first-child){border-top:8px solid #fff}.box-comments>.box-inquiry>.box-answers>.box-inquiry>.box-comment{border-left:2px solid #f7f7f7}.box-comments>.box-inquiry>.box-answers>.box-inquiry:not(:first-child){border-top:4px solid #fff}.label-submitted{background-color:#ffc107}.loader{-webkit-animation:full-rotate .8s linear infinite;animation:full-rotate .8s linear infinite;border:4px solid #ced4da;border-left-color:#215566;font-size:10px;margin:0;position:relative;text-indent:-9999em;transform:translateZ(0)}.loader,.loader:after{border-radius:50%;height:36px;width:36px}.loader.center{margin:1rem auto}.bg-red{background-color:#dc3545}.bg-green{background-color:#28a745}.bg-orange{background-color:#fd7e14}.bg-light-green-100{background-color:#dcedc8}.bg-light-green-300{background-color:#aed581}.bg-light-green-700{background-color:#689f38}.bg-red-300{background-color:#e57373}.bg-red-700{background-color:#d32f2f}.bg-yellow-300{background-color:#fff176}.bg-yellow-700{background-color:#fbc02d}.bg-amber-300{background-color:#ffd54f}.bg-amber-700{background-color:#ffa000}.bg-blue-gray-300{background-color:#90a4ae}.bg-blue-gray-700{background-color:#455a64}.bg-gray-300{background-color:#e0e0e0}.bg-gray-700{background-color:#616161}#container-project-timeline .content{min-height:0}#container-project-timeline .box{min-height:137px}#container-project-timeline .nav-tabs>li.active{font-weight:700}.project-month-data{background:#e1eaee}.project-month-data .slider-horizontal{overflow:hidden;width:100%}.project-month-data .slider-horizontal .inner{display:flex;flex-direction:row;flex-wrap:nowrap;overflow:auto;width:100%}.project-month-data .month-data{background:#fff;flex:0 0 auto;min-width:120px}.project-month-data .month-data:not(:first-child){border-left:1px solid #ced4da}.project-month-data .month-data .month-content{display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:center;min-height:48px;padding:8px 8px 0}.project-month-data .month-data .month-subject{position:relative;width:24px}.project-month-data .month-data .month-subject:not(:last-child){margin-right:10px}.project-month-data .month-data .month-subject:after{background-color:#215566;content:"";height:100%;left:50%;position:absolute;top:0;transition:background-color .2s linear;width:1px;z-index:0}.project-month-data .month-data .month-subject .icon-wrap{align-items:center;background:#fff;border:1px solid #215566;border-radius:50%;cursor:pointer;display:flex;height:24px;justify-content:center;position:relative;transition:all .2s linear;width:24px;z-index:1}.project-month-data .month-data .month-subject .icon-wrap:after{clip:rect(0,24px,24px,10px);background:#fff;border-radius:100%;content:"";height:24px;left:40%;position:absolute;top:0;width:16px;z-index:1}.project-month-data .month-data .month-subject .icon-wrap .icon{display:inline-block;position:relative;z-index:10}.project-month-data .month-data .month-subject.active:after,.project-month-data .month-data .month-subject:active:after,.project-month-data .month-data .month-subject:hover:after{background-color:#f8523c}.project-month-data .month-data .month-subject.active .icon-wrap,.project-month-data .month-data .month-subject:active .icon-wrap,.project-month-data .month-data .month-subject:hover .icon-wrap{border:1px solid #f8523c}.project-month-data .month-data .date{background:#e1eaee;display:block;font-size:14px;font-weight:700;padding:4px 6px;text-align:center;white-space:nowrap}.project-month-data .project-month-details{flex:0 0 100%}.project-month-data .project-month-details .subject-projects{position:relative}.project-month-data .project-month-details .subject-projects .title{background:#215566;border-top:1px solid #ced4da;color:#fff;font-size:18px;font-weight:700;padding:4px 12px;position:relative}.project-month-data .project-month-details .subject-projects .title:before{background:#f8523c;content:"";display:block;height:100%;left:0;position:absolute;top:0;width:4px;z-index:0}.project-month-data .project-month-details .subject-projects .body{background:#fff;padding:4px 12px}.project-month-data .project-month-details .list-projects .list-item{display:block;margin-top:4px;padding:4px 0}.project-month-data .project-month-details .list-projects .list-item-action{font-weight:700;transition:color .2s ease-in-out}.project-month-data .project-month-details .list-projects .list-item-action:active,.project-month-data .project-month-details .list-projects .list-item-action:focus,.project-month-data .project-month-details .list-projects .list-item-action:hover{color:#f8523c}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/